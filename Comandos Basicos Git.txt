--Parte Git

git init 
Sirve para inicializar un proyecto de git

git status
Nos dice como esta acutualmente nuestro repositorio

git add ("Nombre archivo ejemplo 'git add index.html'")
Sirve para subir archivos a git 

git commit -m "Añadido index.html"
Sirve para comentar el ultimo git add que hemos hecho se usa para describir un poco para lo que sirve la ultima subida de archivos que hemos hecho

git config --global user.email "('Correo Electronico')"
Es una configuracion global que sirve para decir cual es nuestro correo

git config --global user.user "('Nombre usuario')"
Es una configuracion global que sirve para decir cual es nuestro nombre de usuario 

git log
Sirve para ver el utlimo commit que se ha hecho nos dice quien ha sido cuando y el hash del commit
Output del ultimo commit:
commit dae9fd5fbe453b924c1eea33dfeb7eab8037323e (HEAD -> master)
Author: Jver28 <jvercecilia@gmail.com>
Date:   Wed Jan 11 13:03:13 2023 +0100

    Añadido index.html

git checkout ('Principio del hash del commit que quieramos' ejemplo:dae9f --> que seria el primer commit que se ha hecho)
Sirve para volver a versiones anteriores del proyecto 

git reset dae9f
Sirve para eliminar el commit que se ha hecho pero no elimina los cambios que se han hecho 

git reset --hard dae9fd5 
Sirve para volver a el estado de ese commit elimina todos los commits que se han hecho despues del commit que se ha seleccionado ("Esta opion elimina todos los cambios que se han hecho en los archivos lo que si hacemos mal esto perderemos informacion")

git restore index.html
Si por algun casual eliminamos el index.html i lo perdemos completamente con este comando recuperaremos el archivo que hemos perdido en el estado del ultimo commit que se ha hecho



Ejemplo de como se haria un Git add correctamente


Contexto Ej1: Hemos modificado el style.css para darle estilos a el navbar entonces queremos subrir la carpeta entera i hacer un commit correctamente

1.- Nos situamos en el archivio raiz en este caso curso git
1.1- Hacemos git status para ver todos los cambios que se han hecho pero no subido 
1.2- Hacemos git add. para subir todos los archivos de el directorio actual 

Contexto Ej2: Una vez subidos todos los archivos que nos interesan queremos hacer un commit para que cuando alguien haga git log vea que cambios se han realizado

2.- Haremos git commit -m "Create navbar" para informar de que se ha creado un navbar nuevo los commits suelen ser cortos como el de este ejemplo porque asi sabemos rapido que cambio se ha realizado

--Parte GitHub

git remote add origin git@github.com:Jver28/curso-git.git
Sirve para subir los archivos que estan en local al repositorio en GitHub con la opcion SSH

git remote -v
Sireve para ver el origin del repositorio 

Para poder conectar el repositorio con SSH tendremos que ir al siguiente enlace https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent

ssh-keygen -t ed25519 -C "jceci2@insdanielblanxart.cat"
Con este comando crearemos la clave de SSH 

git push -u origin ("nombre del repositorio" en este caso es "master")

ls -al ~/.ssh
Este comando sirve para poder ver las claves que hemos creado